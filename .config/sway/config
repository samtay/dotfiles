# Default config for sway
#
# Read `man 5 sway` for a complete reference.

# exec
exec wl-paste -t text --watch clipman store
exec wl-paste -p -t text --watch clipman store -P --histpath="~/.local/share/clipman-primary.json"
exec mako


### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod1
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term kitty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu wofi --show=drun --lines=5 --prompt=""
default_border pixel 2
set $bg 	#d65d0e
set $bg-inactive   #323232
set $bg-urgent     #000000
set $text          #eeeeec
set $text-inactive #babdb6

set $bar           #323232
set $statusline    #e0e0e0

client.focused          $bg           $bg          $text          $bg $bg
client.unfocused        $bg-inactive  $bg-inactive $text-inactive $bar $bar
client.focused_inactive $bg-inactive  $bg-inactive $text-inactive $bar $bar
client.urgent           $bg-urgent    $bg-urgent   $text          $bar $bar

#{
  #base00 = "282828"; # ----
  #base01 = "3c3836"; # ---
  #base02 = "504945"; # --
  #base03 = "665c54"; # -
  #base04 = "bdae93"; # +
  #base05 = "d5c4a1"; # ++
  #base06 = "ebdbb2"; # +++
  #base07 = "fbf1c7"; # ++++
  #base08 = "fb4934"; # red
  #base09 = "fe8019"; # orange
  #base0A = "fabd2f"; # yellow
  #base0B = "b8bb26"; # green
  #base0C = "8ec07c"; # aqua/cyan
  #base0D = "83a598"; # blue
  #base0E = "d3869b"; # purple
  #base0F = "d65d0e"; # brown
#}
#client.focused "#${colors.base0D}" "#${colors.base0D}" "#${colors.base00}" "#${colors.base0C}" "#${colors.base0D}"
#client.focused_inactive "#${colors.base02}" "#${colors.base02}" "#${colors.base04}" "#${colors.base04}" "#${colors.base02}"
#client.unfocused "#${colors.base02}" "#231f20" "#${colors.base04}" "#${colors.base03}" "#${colors.base02}"
#client.urgent "#${colors.base08}" "#${colors.base08}" "#${colors.base00}" "#${colors.base08}" "#${colors.base08}"
gaps outer 16
gaps inner 10

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Gruvbox.png fill
output "Goldstar Company Ltd LG ULTRAWIDE 0x00004C24" bg /home/sam/Downloads/the_valley.png fill
#
# You can get the names of your outputs by running: swaymsg -t get_outputs
# N.B.: relies on custom boot param video=DP-1:2560x1080@45
output "Goldstar Company Ltd LG ULTRAWIDE 0x00004C24" resolution 2560x1080@45.028999Hz position -2560,0

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
#
input "1739:32652:SYNA2B31:00_06CB:7F8C_Touchpad" {
    dwt enabled
    tap enabled
    natural_scroll disabled
    middle_emulation disabled
}

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+w kill

    # Start your launcher
    bindsym $mod+space exec $menu

    # clipboard
    bindsym $mod+p exec clipman pick --tool wofi

    bindsym $mod+o exec rg --files ~ | wofi --dmenu | xargs -n 1 dragon-drag-and-drop --and-exit

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

    # volume
    bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
    bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
    bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
    # brightness
    bindsym XF86MonBrightnessUp exec light -A 3
    bindsym XF86MonBrightnessDown exec light -U 3

    bindsym $mod+y exec grim -g "$(slurp)" "/home/sam/Screenshots/$(date -u +'%Y-%m-%d_%H-%M-%S.png')"
    bindsym $mod+Shift+y grim -o $(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name') "/home/sam/Screenshots/$(date -u +'%Y-%m-%d_%H-%M-%S.png')"
    # bindsym Print exec scrot -e 'mv $f ~/screenshots/'
    # bindsym $mod+Print exec scrot -s -e 'mv $f ~/screenshots/'

# Displays
    bindsym $mod+d mode "display"
    mode "display" {
      bindsym 1 output eDP-1 toggle, mode "default"
      bindsym 2 output DP-1 toggle, mode "default"
    }
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    # bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    # bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
    #
    bindsym $mod+tab workspace back_and_forth
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+slash splith
    bindsym $mod+minus splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    # bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+t floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+t focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
    bindsym $mod+shift+a focus child
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+0 move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+0 scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 20px
    bindsym $down resize grow height 20px
    bindsym $up resize shrink height 20px
    bindsym $right resize grow width 20px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 20px
    bindsym Down resize grow height 20px
    bindsym Up resize shrink height 20px
    bindsym Right resize grow width 20px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    swaybar_command waybar
    # position top

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    # status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done

    # colors {
    #    statusline #ffffff
    #    background #323232
    #    inactive_workspace #32323200 #32323200 #5c5c5c
    #}
}

include /etc/sway/config.d/*

